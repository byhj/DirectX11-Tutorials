
cbuffer LightBuffer
{
  float4 ambientColor;
  float4 diffuseColor;
  float3 lightDirection;
  float padding;
};

struct VS_OUTPUT 
{
    float4 Pos : SV_POSITION;
   	float2 Tex : TEXCOORD0;
	float3 Normal: NORMAL;
};

Texture2D tex;
SamplerState texSample;

float4 PS(VS_OUTPUT ps_in) : SV_TARGET
{
  //Calc the diffuse light
  float3 lightDir = -lightDirection;
  float intensity = saturate( dot(ps_in.Normal, lightDir) ); 
  float4 diffuse = saturate(diffuseColor * intensity);

  float4 ambient = ambientColor;
  float4 result = saturate(ambient + diffuse);
   
  float4 texColor = tex.Sample(texSample, ps_in.Tex);
  float4 pixelColor = result * texColor;

  return pixelColor;
}