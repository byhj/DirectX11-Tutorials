
cbuffer LightBuffer	 : register(b0)
{
  float4 ambientColor;
  float4 diffuseColor;
  float3 lightDirection;
};

struct VS_OUTPUT 
{
    float4 Pos : SV_POSITION;
   	float2 Tex : TEXCOORD0;
	float3 Normal: NORMAL;
};

Texture2D tex0: register(t0);
SamplerState texSample : register(s0);

float4 PS(VS_OUTPUT ps_in) : SV_TARGET
{

  ps_in.Normal = normalize(ps_in.Normal);
  float4 texColor = tex0.Sample(texSample, ps_in.Tex);

  float4 ambient = ambientColor;
  float3 lightDir = float3(0.0f, -1.0f, 0.5f);;
  float  intensity = saturate( dot(ps_in.Normal, -lightDir) ); 
  float4 diffuse   = saturate(diffuseColor * intensity);

  float4 pixelColor =  (diffuse) * texColor;

  return pixelColor;
}