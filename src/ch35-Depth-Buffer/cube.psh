
cbuffer LightBuffer	 : register(b0)
{
  float4 ambientColor;
  float4 diffuseColor;
  float3 lightDirection;
  float  specularPower;
  float4 specularColor;

};

struct VS_OUTPUT 
{
    float4 Pos : SV_POSITION;
   	float2 Tex : TEXCOORD0;
	float3 Normal: NORMAL;
	float4 depthPos: TEXCOORD2;
};

Texture2D tex : register(t0);
SamplerState texSample: register(s0);

float4 PS(VS_OUTPUT ps_in) : SV_TARGET
{
	// Get the depth value of the pixel by dividing the Z pixel depth by the homogeneous W coordinate.
	float depthValue = ps_in.depthPos.z / ps_in.depthPos.w;
	float4 color;
	// First 10% of the depth buffer color red.
	if(depthValue < 0.5f)
	{
		color = float4(1.0, 0.0f, 0.0f, 1.0f);
	}
	
	// The next 0.025% portion of the depth buffer color green.
	if(depthValue > 0.5f)
	{
		color = float4(0.0, 1.0f, 0.0f, 1.0f);
	}

  return color;
}