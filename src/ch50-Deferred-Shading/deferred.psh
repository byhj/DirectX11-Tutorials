
cbuffer LightBuffer	 : register(b0)
{
  float4 ambientColor;
  float4 diffuseColor;
  float3 lightDirection;
  float  specularPower;
  float4 specularColor;

};

struct VS_OUT
{
    float4 Pos : SV_POSITION;
   	float2 Tex : TEXCOORD0;
	float3 Normal: NORMAL;
};

struct PS_OUT
{
   float4 color  : SV_Target0;
   float4 normal : SV_Target1;
};

Texture2D tex : register(t0);
SamplerState texSample: register(s0);

PS_OUT PS(VS_OUT ps_in) : SV_TARGET
{
  PS_OUT ps_out;
  ps_out.color  = tex.Sample(texSample, ps_in.Tex);
  ps_out.normal = float4(ps_in.Normal, 1.0f); 

  return ps_out;
}